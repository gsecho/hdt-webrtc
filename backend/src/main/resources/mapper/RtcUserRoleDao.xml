<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantil.webrtc.core.dao.RtcUserRoleDao">
  <resultMap id="BaseResultMap" type="com.quantil.webrtc.core.bean.db.RtcUserRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_dt" jdbcType="TIMESTAMP" property="createDt" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_dt" jdbcType="TIMESTAMP" property="updateDt" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from rtc_user_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.quantil.webrtc.core.bean.db.RtcUserRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rtc_user_role (user_id, role_id, status, 
      create_dt, create_by, update_dt, 
      update_by, remark)
    values (#{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{createDt,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateDt,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.quantil.webrtc.core.bean.db.RtcUserRole">
    update rtc_user_role
    set user_id = #{userId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      create_dt = #{createDt,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_dt = #{updateDt,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, user_id, role_id, status, create_dt, create_by, update_dt, update_by, 
    remark
    from rtc_user_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectRoleByUserId" parameterType="java.lang.Long" resultType="string">
    select r.role from rtc_user_role as ur
    inner join rtc_role as r
    on ur.role_id = r.id
    where ur.user_id = #{id,jdbcType=BIGINT}
      and ur.status = 0
      and r.status = 0
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, role_id, status, create_dt, create_by, update_dt, update_by, 
    remark
    from rtc_user_role
  </select>
</mapper>